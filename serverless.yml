service: ebrecho-api

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    NODE_ENV: ${self:provider.stage}
    DATABASE_URL: ${env:DATABASE_URL}
    DIRECT_URL: ${env:DIRECT_URL}
    JWT_SECRET: ${env:JWT_SECRET}
    FRONTEND_URL: ${env:FRONTEND_URL}
    UPLOAD_DIR: /tmp/uploads
  vpc:
    securityGroupIds:
      - ${env:SECURITY_GROUP_ID, ''}
    subnetIds:
      - ${env:SUBNET_ID_1, ''}
      - ${env:SUBNET_ID_2, ''}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::${env:S3_BUCKET, 'ebrecho-uploads'}/*"

functions:
  api:
    handler: dist/src/lambda.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
    timeout: 30
    memorySize: 1024

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 3001
    noPrependStageInUrl: true
  typescript:
    tsConfigFileLocation: './tsconfig.json'

package:
  patterns:
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!node_modules/@prisma/engines/**'
    - '!tests/**'
    - '!docs/**'
    - '!scripts/**'
    - '!.git/**'
    - '!.env*'